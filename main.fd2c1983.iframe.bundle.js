(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{"./generated-stories-entry.js":function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js").configure)([__webpack_require__("./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.tsx)$")],module,!1)}).call(this,__webpack_require__("./node_modules/webpack/buildin/module.js")(module))},"./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/dist/cjs.js?!./src/GeoloniaMap/GeoloniaMap.stories.css":function(module,exports,__webpack_require__){(exports=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([module.i,".geolonia {\n  height: 90vh;\n  width: 100%;\n}\n\n.flex {\n  display: flex;\n}\n\n.sidebar {\n  height: 90vh;\n  width: 20%;\n}\n\n.sidebar > * {\n  display: block;\n  margin: 1em;\n}\n\n.geolonia-80 {\n  height: 90vh;\n  width: 80%;\n}\n",""]),module.exports=exports},"./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.tsx)$":function(module,exports,__webpack_require__){var map={"./GeoloniaMap/GeoloniaMap.stories.tsx":"./src/GeoloniaMap/GeoloniaMap.stories.tsx"};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id="./src sync recursive ^\\.(?:(?:^|\\/|(?:(?:(?!(?:^|\\/)\\.).)*?)\\/)(?!\\.)(?=.)[^/]*?\\.stories\\.tsx)$"},"./src/GeoloniaMap/GeoloniaMap.stories.css":function(module,exports,__webpack_require__){var api=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),content=__webpack_require__("./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/dist/cjs.js?!./src/GeoloniaMap/GeoloniaMap.stories.css");"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},"./src/GeoloniaMap/GeoloniaMap.stories.tsx":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Defaults",(function(){return GeoloniaMap_stories_Defaults})),__webpack_require__.d(__webpack_exports__,"SimpleMarker",(function(){return GeoloniaMap_stories_SimpleMarker})),__webpack_require__.d(__webpack_exports__,"MarkerWithPopup",(function(){return GeoloniaMap_stories_MarkerWithPopup})),__webpack_require__.d(__webpack_exports__,"AllControls",(function(){return GeoloniaMap_stories_AllControls})),__webpack_require__.d(__webpack_exports__,"CustomControls",(function(){return GeoloniaMap_stories_CustomControls})),__webpack_require__.d(__webpack_exports__,"GeoJSONWithSimpleStyle",(function(){return GeoloniaMap_stories_GeoJSONWithSimpleStyle})),__webpack_require__.d(__webpack_exports__,"VectorTileWithSimpleStyle",(function(){return GeoloniaMap_stories_VectorTileWithSimpleStyle})),__webpack_require__.d(__webpack_exports__,"Enable3D",(function(){return GeoloniaMap_stories_Enable3D})),__webpack_require__.d(__webpack_exports__,"Disable3D",(function(){return GeoloniaMap_stories_Disable3D})),__webpack_require__.d(__webpack_exports__,"CustomJavaScript",(function(){return GeoloniaMap_stories_CustomJavaScript})),__webpack_require__.d(__webpack_exports__,"ChangeProps",(function(){return GeoloniaMap_stories_ChangeProps})),__webpack_require__.d(__webpack_exports__,"WithinComponent",(function(){return GeoloniaMap_stories_WithinComponent}));__webpack_require__("./node_modules/core-js/modules/web.timers.js"),__webpack_require__("./node_modules/core-js/modules/es.array.concat.js"),__webpack_require__("./node_modules/core-js/modules/es.array.map.js");var toConsumableArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js"),slicedToArray=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),react=__webpack_require__("./node_modules/react/index.js"),react_default=__webpack_require__.n(react),objectSpread2=(__webpack_require__("./node_modules/core-js/modules/es.string.replace.js"),__webpack_require__("./node_modules/core-js/modules/es.regexp.exec.js"),__webpack_require__("./node_modules/core-js/modules/es.array.find.js"),__webpack_require__("./node_modules/core-js/modules/es.array.from.js"),__webpack_require__("./node_modules/core-js/modules/es.string.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.url.js"),__webpack_require__("./node_modules/core-js/modules/es.object.to-string.js"),__webpack_require__("./node_modules/core-js/modules/es.array.iterator.js"),__webpack_require__("./node_modules/core-js/modules/web.dom-collections.iterator.js"),__webpack_require__("./node_modules/core-js/modules/es.array.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.string.includes.js"),__webpack_require__("./node_modules/core-js/modules/es.array.is-array.js"),__webpack_require__("./node_modules/core-js/modules/es.array.reduce.js"),__webpack_require__("./node_modules/core-js/modules/es.parse-float.js"),__webpack_require__("./node_modules/core-js/modules/es.object.from-entries.js"),__webpack_require__("./node_modules/core-js/modules/es.array.filter.js"),__webpack_require__("./node_modules/core-js/modules/es.object.assign.js"),__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js")),react_dom=__webpack_require__("./node_modules/react-dom/index.js"),react_dom_default=__webpack_require__.n(react_dom),deep_equal=__webpack_require__("./node_modules/deep-equal/index.js"),deep_equal_default=__webpack_require__.n(deep_equal),classCallCheck=(__webpack_require__("./node_modules/core-js/modules/es.string.split.js"),__webpack_require__("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js")),createClass=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/createClass.js"),Control_Control=function Control(props){var _useState=Object(react.useState)(null),_useState2=Object(slicedToArray.a)(_useState,2),portalControl=_useState2[0],setPortalControl=_useState2[1],controlContainer=Object(react.useMemo)((function(){return document.createElement("div")}),[]),map=Object(react.useContext)(GeoloniaMapContext),children=props.children,position=props.position,_onAdd=props.onAdd,_onRemove=props.onRemove,containerProps=props.containerProps;return Object(react.useEffect)((function(){if(null!=containerProps&&containerProps.className){var _controlContainer$cla,tokens=(null==containerProps?void 0:containerProps.className.split(" ").filter((function(token){return!!token})))||[];(_controlContainer$cla=controlContainer.classList).add.apply(_controlContainer$cla,Object(toConsumableArray.a)(tokens))}else controlContainer.setAttribute("class","")}),[null==containerProps?void 0:containerProps.className,controlContainer]),Object(react.useEffect)((function(){var PortalControl=function(){function PortalControl(){Object(classCallCheck.a)(this,PortalControl),this.portal=void 0}return Object(createClass.a)(PortalControl,[{key:"onAdd",value:function onAdd(map){return _onAdd?_onAdd(map):controlContainer}},{key:"onRemove",value:function onRemove(map){_onRemove&&_onRemove(map)}}]),PortalControl}();setPortalControl(new PortalControl)}),[controlContainer,_onAdd,_onRemove]),Object(react.useEffect)((function(){map&&portalControl&&map.addControl(portalControl,position)}),[portalControl,map,position]),Object(react.useEffect)((function(){return function(){map&&portalControl&&(map.removeControl(portalControl),controlContainer.remove())}}),[controlContainer,map,portalControl]),controlContainer&&react_dom_default.a.createPortal(children,controlContainer)},EMBED_ATTRIBUTES=["render3d","bearing","cluster","clusterColor","customMarker","customMarkerOffset","fullscreenControl","geojson","geolocateControl","geoloniaControl","gestureHandling","hash","key","lang","lat","lng","loader","marker","markerColor","maxZoom","minZoom","navigationControl","openPopup","pitch","plugin","scaleControl","simpleVector","mapStyle","zoom"],EMBED_ATTRIBUTE_MAP={render3d:"3d",mapStyle:"style"},ensureGeoloniaEmbed=function ensureGeoloniaEmbed(cb,apiKey,embedSrc){if("geolonia"in window)return window.geolonia;var embedScriptTag=function findEmbedScriptTag(){var elem=document.querySelector("script#geolonia-embed");return elem||Array.from(document.querySelectorAll("script")).find((function(el){if(""===el.src)return!1;try{return new URL(el.src).searchParams.has("geolonia-api-key")}catch(e){if(e.message.includes("Invalid URL"))return!1;throw e}}))}();if(embedScriptTag)return embedScriptTag.addEventListener("load",(function(){cb()})),!1;var newScript=document.createElement("script");return newScript.onload=function(){cb()},newScript.async=!0,newScript.defer=!0,newScript.id="geolonia-embed",document.head.appendChild(newScript),newScript.src=embedSrc||function DEFAULT_EMBED_SRC(key){return"https://cdn.geolonia.com/v1/embed?geolonia-api-key=".concat(key||"YOUR-API-KEY")}(apiKey),!1},GeoloniaMap_MapMarkerPortal=function MapMarkerPortal(props){var wrapperElement=Object(react.useMemo)((function(){return document.createElement("div")}),[]),map=props.map,lat=props.lat,lng=props.lng,markerColor=props.markerColor,openPopup=props.openPopup,popupExists=!!props.children;return Object(react.useLayoutEffect)((function(){var marker=new window.geolonia.Marker({color:markerColor}).setLngLat([lng,lat]).addTo(map);if(popupExists){var popup=new window.geolonia.Popup({offset:[0,-25]}).setDOMContent(wrapperElement);marker.setPopup(popup),"on"===openPopup&&marker.togglePopup()}return function(){marker.remove()}}),[lat,lng,map,markerColor,openPopup,popupExists,wrapperElement]),popupExists?react_dom_default.a.createPortal(props.children,wrapperElement):null},GeoloniaMap_filterBoundProps=function _filterBoundProps(props){return Object(objectSpread2.a)(Object(objectSpread2.a)({},props),{},{lat:void 0,lng:void 0,zoom:void 0,style:void 0,mapStyle:void 0,className:void 0,children:void 0,openPopup:void 0,markerColor:void 0})},GeoloniaMapContext=Object(react.createContext)(null),GeoloniaMap_GeoloniaMap=function GeoloniaMap(rawProps){var props=Object(react.useMemo)((function(){return Object(objectSpread2.a)({hash:"off",marker:"on",markerColor:"#E4402F",openPopup:"off",mapStyle:"geolonia/basic"},rawProps)}),[rawProps]),_children$reduce=(props.children?Array.isArray(props.children)?props.children:[props.children]:[]).reduce((function(prev,child){return react_default.a.isValidElement(child)&&child.type===Control_Control?prev[0].push(child):prev[1].push(child),prev}),[[],[]]),_children$reduce2=Object(slicedToArray.a)(_children$reduce,2),controlNodes=_children$reduce2[0],commonNodes=_children$reduce2[1],_useState=Object(react.useState)(0),_useState2=Object(slicedToArray.a)(_useState,2),reloadSwitch=_useState2[0],setReloadSwitch=_useState2[1],_useState3=Object(react.useState)(void 0),_useState4=Object(slicedToArray.a)(_useState3,2),internalMap=_useState4[0],setInternalMap=_useState4[1],mapRef=Object(react.useRef)(null),mapContainer=Object(react.useRef)(null),_useState5=Object(react.useState)(props),_useState6=Object(slicedToArray.a)(_useState5,2),initialProps=_useState6[0],setInitialProps=_useState6[1];Object(react.useEffect)((function(){setInitialProps((function(ip){var filteredProps=GeoloniaMap_filterBoundProps(props),filteredIp=GeoloniaMap_filterBoundProps(ip);return deep_equal_default()(filteredIp,filteredProps)?ip:props}))}),[props]),Object(react.useLayoutEffect)((function(){var geolonia=ensureGeoloniaEmbed((function loaded(){return setReloadSwitch((function(sw){return sw+1}))}),initialProps.apiKey,initialProps.embedSrc);if(geolonia){var container=mapContainer.current,map=new geolonia.Map({container:container});mapRef.current=map,setInternalMap(map),initialProps.mapRef&&(initialProps.mapRef.current=map),initialProps.onLoad&&initialProps.onLoad(map);var fullyLoaded=!1;return map.on("load",(function(){fullyLoaded=!0})),function(){fullyLoaded&&map.remove(),container.geoloniaMap=void 0}}}),[reloadSwitch,initialProps]);var currentPosRef=Object(react.useRef)({lat:initialProps.lat,lng:initialProps.lng,zoom:initialProps.zoom});Object(react.useEffect)((function(){var _currentPosRef$curren=currentPosRef.current,lat=_currentPosRef$curren.lat,lng=_currentPosRef$curren.lng,zoom=_currentPosRef$curren.zoom;lat===props.lat&&lng===props.lng&&zoom===props.zoom||mapRef.current&&(mapRef.current.flyTo({zoom:parseFloat(props.zoom),center:{lat:parseFloat(props.lat),lng:parseFloat(props.lng)}}),currentPosRef.current={lat:props.lat,lng:props.lng,zoom:props.zoom})}),[props.lat,props.lng,props.zoom]);var currentStyleRef=Object(react.useRef)(props.mapStyle);Object(react.useEffect)((function(){props.mapStyle!==currentStyleRef.current&&mapRef.current&&(mapRef.current.setStyle(props.mapStyle),currentStyleRef.current=props.mapStyle)}),[props.mapStyle]);var passthroughAttributes=Object(objectSpread2.a)(Object(objectSpread2.a)({},initialProps),{},{marker:"off"}),dataAttributes=Object.fromEntries(EMBED_ATTRIBUTES.map((function(v){if(void 0!==passthroughAttributes[v]){var dataAttributeName=v;return v in EMBED_ATTRIBUTE_MAP&&(dataAttributeName=EMBED_ATTRIBUTE_MAP[v]),dataAttributeName=function camelCaseToSnakeCase(input){return input.replace(/[A-Z]/g,(function(x){return"-".concat(x.toLowerCase())}))}(dataAttributeName),["data-".concat(dataAttributeName),passthroughAttributes[v]]}})).filter((function(v){return void 0!==v})));return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement("div",Object.assign({className:props.className,ref:mapContainer,style:props.style},dataAttributes)),internalMap&&props.lat&&props.lng&&"on"===props.marker&&react_default.a.createElement(GeoloniaMap_MapMarkerPortal,{map:internalMap,lat:parseFloat(props.lat),lng:parseFloat(props.lng),markerColor:props.markerColor,openPopup:props.openPopup},commonNodes),internalMap&&react_default.a.createElement(GeoloniaMapContext.Provider,{value:internalMap},controlNodes))};GeoloniaMap_GeoloniaMap.Control=Control_Control;var src_GeoloniaMap_GeoloniaMap=GeoloniaMap_GeoloniaMap,GeoloniaMap_stories_Defaults=(__webpack_require__("./src/GeoloniaMap/GeoloniaMap.stories.css"),__webpack_exports__.default={parameters:{storySource:{source:"import type { Map } from '@geolonia/embed';\nimport { Meta } from '@storybook/react';\nimport React, { useCallback, useLayoutEffect, useState } from 'react';\nimport GeoloniaMap from './GeoloniaMap';\nimport './GeoloniaMap.stories.css';\n\nexport default {\n  title: 'GeoloniaMap',\n} as Meta;\n\nexport const Defaults = () => (\n  <GeoloniaMap\n    className=\"geolonia\"\n    apiKey=\"YOUR-API-KEY\"\n  />\n);\n\nexport const SimpleMarker = () => (\n  <GeoloniaMap\n    className=\"geolonia\"\n    lat=\"35.681236\"\n    lng=\"139.767125\"\n    zoom=\"16\"\n    markerColor=\"#555\"\n  />\n);\n\nconst TokyoYamanoteLineStations: [name: string, lng: string, lat: string, search: string][] = [\n  ['東京駅', '139.766103', '35.681391', 'tokyo'],\n  ['有楽町駅', '139.763806', '35.675441', 'yurakucyo'],\n  ['新橋駅', '139.758587', '35.666195', 'shinbashi'],\n  ['浜松町駅', '139.757135', '35.655391', 'hamamatsu'],\n  ['田町駅', '139.747575', '35.645736', 'tamachi'],\n  ['品川駅', '139.738999', '35.62876', 'shinagawa'],\n  ['大崎駅', '139.728439', '35.619772', 'osaki'],\n  ['五反田駅', '139.723822', '35.625974', 'gotanda'],\n  ['目黒駅', '139.715775', '35.633923', 'meguro'],\n  ['恵比寿駅', '139.71007', '35.646685', 'ebisu'],\n  ['渋谷駅', '139.701238', '35.658871', 'shibuya'],\n  ['原宿駅', '139.702592', '35.670646', 'harajyuku'],\n  ['代々木駅', '139.702042', '35.683061', 'yoyogi'],\n  ['新宿駅', '139.700464', '35.689729', 'shinjyuku'],\n  ['新大久保駅', '139.700261', '35.700875', 'shinokubo'],\n  ['高田馬場駅', '139.703715', '35.712677', 'takadanobaba'],\n  ['目白駅', '139.706228', '35.720476', 'mejiro'],\n  ['池袋駅', '139.711086', '35.730256', 'ikebukuro'],\n  ['大塚駅', '139.728584', '35.731412', 'otsuka'],\n  ['巣鴨駅', '139.739303', '35.733445', 'sugamo'],\n  ['駒込駅', '139.748053', '35.736825', 'komagome'],\n  ['田端駅', '139.761229', '35.737781', 'tabata'],\n  ['西日暮里駅', '139.766857', '35.731954', 'nishinippori'],\n  ['日暮里駅', '139.771287', '35.727908', 'nippori'],\n  ['鶯谷駅', '139.778015', '35.721484', 'uguisudani'],\n  ['上野駅', '139.777043', '35.71379', 'ueno'],\n  ['御徒町駅', '139.774727', '35.707282', 'okachimachi'],\n  ['秋葉原駅', '139.773288', '35.698619', 'akihabara'],\n  ['神田駅', '139.770641', '35.691173', 'kanda'],\n];\n\nexport const MarkerWithPopup = () => {\n  const [ count, setCount ] = useState(-1);\n\n  useLayoutEffect(() => {\n    let timeout: number;\n    const tick = () => {\n      setCount((count) => count + 1);\n      timeout = window.setTimeout(tick, 5_000);\n    };\n    tick();\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, []);\n\n  const [name, lng, lat] = TokyoYamanoteLineStations[ Math.max(0, count) % TokyoYamanoteLineStations.length ];\n\n  return (\n    <GeoloniaMap\n      className=\"geolonia\"\n      lat={lat}\n      lng={lng}\n      openPopup=\"on\"\n      zoom=\"12\"\n    >\n      <h3>{name}</h3>\n    </GeoloniaMap>\n  );\n};\n\nexport const AllControls = () => (\n  <GeoloniaMap\n    className=\"geolonia\"\n    lat=\"34.704395\"\n    lng=\"135.494771\"\n    zoom=\"14\"\n    navigationControl=\"on\"\n    geolocateControl=\"on\"\n    fullscreenControl=\"on\"\n    scaleControl=\"on\"\n  >\n    グランフロント\n  </GeoloniaMap>\n);\n\nexport const CustomControls = () => {\n\n  type ControlTemplate = {\n    type: 'button' | 'text' | 'select' | 'label'\n    position: 'top-left' | 'top-right' | 'bottom-right' | 'bottom-left'\n  }\n\n  const [controls, setControls] = useState<ControlTemplate[]>([]);\n  const types = ['button', 'text', 'label'];\n  const positions = ['top-left', 'top-right', 'bottom-right', 'bottom-left'];\n\n  const handleAppendControl = useCallback(() => {\n    const control = {\n      type: (document.getElementById('select-type') as HTMLSelectElement).value,\n      position: (document.getElementById('select-position') as HTMLSelectElement).value,\n    } as ControlTemplate;\n    setControls([...controls, control]);\n  }, [controls]);\n\n  return (\n    <div className=\"flex\">\n\n      <form className=\"sidebar\">\n        <select name=\"control-type\" id=\"select-type\">\n          {types.map((type) => <option key={type} value={type}>{type}</option>)}\n        </select>\n        <select name=\"position\" id=\"select-position\">\n          {\n            positions.map((position) => <option key={position} value={position}>{position}</option>)\n          }\n        </select>\n        <button type={'button'} onClick={handleAppendControl}>{'コントロールを追加'}</button>\n      </form>\n\n      <GeoloniaMap\n        lng={TokyoYamanoteLineStations[0][1]}\n        lat={TokyoYamanoteLineStations[0][2]}\n        zoom={'16'}\n        className=\"geolonia-80\"\n        marker={'off'}\n      >\n        {controls.map((control, i) => <GeoloniaMap.Control\n          key={i}\n          position={control.position}\n          containerProps={ { className: 'maplibregl-ctrl maplibregl-ctrl-group mapboxgl-ctrl mapboxgl-ctrl-group' } }\n        >\n          {\n            control.type === 'button' ? <button>{`${i + 1}`}</button> :\n              control.type === 'label' ? <span>{`Hello ${i + 1}`}</span> :\n                control.type === 'text' ? <input type=\"text\" placeholder={`Hello ${i + 1}`} /> : null\n          }\n        </GeoloniaMap.Control>)}\n\n      </GeoloniaMap>\n    </div>\n  );\n};\n\nexport const GeoJSONWithSimpleStyle = () => (\n  <GeoloniaMap\n    className=\"geolonia\"\n    geojson=\"https://gist.githubusercontent.com/miya0001/56c3dc174f5cdf1d9565cbca0fbd3c48/raw/c13330036d28ef547a8a87cb6df3fa12de19ddb6/test.geojson\"\n    marker=\"off\"\n  />\n);\n\nexport const VectorTileWithSimpleStyle = () => (\n  <GeoloniaMap\n    className=\"geolonia\"\n    simpleVector=\"https://tileserver.geolonia.com/embed-simple-vector-sample/tiles.json\"\n    marker=\"off\"\n  />\n);\n\nexport const Enable3D = () => (\n  <GeoloniaMap\n    className=\"geolonia\"\n    mapStyle=\"geolonia/basic\"\n    lat=\"35.68116\"\n    lng=\"139.764992\"\n    zoom=\"16\"\n    render3d=\"on\"\n  />\n);\n\nexport const Disable3D = () => (\n  <GeoloniaMap\n    className=\"geolonia\"\n    mapStyle=\"geolonia/gsi\"\n    lat=\"35.68116\"\n    lng=\"139.764992\"\n    zoom=\"16\"\n    render3d=\"off\"\n  />\n);\n\nexport const CustomJavaScript = () => {\n  const onLoad = useCallback((map: Map) => {\n    let animator: number | undefined = undefined;\n    const doRotate = () => {\n      map.rotateTo( map.getBearing() + 0.1 );\n      animator = window.requestAnimationFrame(doRotate);\n    };\n    doRotate();\n\n    return () => {\n      if (typeof animator !== 'undefined')\n        window.cancelAnimationFrame(animator);\n    };\n  }, []);\n  return (\n    <GeoloniaMap\n      className=\"geolonia\"\n      mapStyle=\"geolonia/basic\"\n      lat=\"35.68116\"\n      lng=\"139.764992\"\n      zoom=\"16\"\n      render3d=\"on\"\n      onLoad={onLoad}\n    />\n  );\n};\n\nexport const ChangeProps = () => {\n  const [onoff, setOnoff] = useState<string>('on');\n\n  return (\n    <div>\n      <p>Currently displaying: {onoff}</p>\n      <button onClick={() => setOnoff('on')}>Set render3d = on</button>\n      <button onClick={() => setOnoff('off')}>Set render3d = off</button>\n\n      <GeoloniaMap\n        className=\"geolonia\"\n        mapStyle=\"geolonia/basic\"\n        lat=\"35.68116\"\n        lng=\"139.764992\"\n        zoom=\"16\"\n        render3d={onoff}\n      />\n    </div>\n  );\n};\n\nexport const WithinComponent = () => {\n  const WrapperComponent: React.FC<{idx: number}> = ({idx}) => {\n    return (\n      <div>\n        <h3>Hello, map {idx}!</h3>\n        <GeoloniaMap\n          className=\"geolonia\"\n          mapStyle=\"geolonia/basic\"\n          lat=\"35.68116\"\n          lng=\"139.764992\"\n          zoom=\"16\"\n          render3d=\"on\"\n        />\n      </div>\n    );\n  };\n\n  const [sel, setSel] = useState<number>(0);\n\n  return (\n    <div>\n      <p>Currently displaying: {sel}</p>\n      <button onClick={() => setSel(0)}>Switch to 0</button>\n      <button onClick={() => setSel(1)}>Switch to 1</button>\n      <button onClick={() => setSel(2)}>Switch to 2</button>\n\n      <WrapperComponent idx={sel} />\n    </div>\n  );\n};\n",locationsMap:{defaults:{startLoc:{col:24,line:11},endLoc:{col:1,line:16},startBody:{col:24,line:11},endBody:{col:1,line:16}},"simple-marker":{startLoc:{col:28,line:18},endLoc:{col:1,line:26},startBody:{col:28,line:18},endBody:{col:1,line:26}},"marker-with-popup":{startLoc:{col:31,line:60},endLoc:{col:1,line:88},startBody:{col:31,line:60},endBody:{col:1,line:88}},"all-controls":{startLoc:{col:27,line:90},endLoc:{col:1,line:103},startBody:{col:27,line:90},endBody:{col:1,line:103}},"custom-controls":{startLoc:{col:30,line:105},endLoc:{col:1,line:161},startBody:{col:30,line:105},endBody:{col:1,line:161}},"geo-json-with-simple-style":{startLoc:{col:38,line:163},endLoc:{col:1,line:169},startBody:{col:38,line:163},endBody:{col:1,line:169}},"vector-tile-with-simple-style":{startLoc:{col:41,line:171},endLoc:{col:1,line:177},startBody:{col:41,line:171},endBody:{col:1,line:177}},"enable-3-d":{startLoc:{col:24,line:179},endLoc:{col:1,line:188},startBody:{col:24,line:179},endBody:{col:1,line:188}},"disable-3-d":{startLoc:{col:25,line:190},endLoc:{col:1,line:199},startBody:{col:25,line:190},endBody:{col:1,line:199}},"custom-java-script":{startLoc:{col:32,line:201},endLoc:{col:1,line:226},startBody:{col:32,line:201},endBody:{col:1,line:226}},"change-props":{startLoc:{col:27,line:228},endLoc:{col:1,line:247},startBody:{col:27,line:228},endBody:{col:1,line:247}},"within-component":{startLoc:{col:31,line:249},endLoc:{col:1,line:278},startBody:{col:31,line:249},endBody:{col:1,line:278}}}}},title:"GeoloniaMap"},function Defaults(){return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",apiKey:"YOUR-API-KEY"})}),GeoloniaMap_stories_SimpleMarker=function SimpleMarker(){return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",lat:"35.681236",lng:"139.767125",zoom:"16",markerColor:"#555"})},TokyoYamanoteLineStations=[["東京駅","139.766103","35.681391","tokyo"],["有楽町駅","139.763806","35.675441","yurakucyo"],["新橋駅","139.758587","35.666195","shinbashi"],["浜松町駅","139.757135","35.655391","hamamatsu"],["田町駅","139.747575","35.645736","tamachi"],["品川駅","139.738999","35.62876","shinagawa"],["大崎駅","139.728439","35.619772","osaki"],["五反田駅","139.723822","35.625974","gotanda"],["目黒駅","139.715775","35.633923","meguro"],["恵比寿駅","139.71007","35.646685","ebisu"],["渋谷駅","139.701238","35.658871","shibuya"],["原宿駅","139.702592","35.670646","harajyuku"],["代々木駅","139.702042","35.683061","yoyogi"],["新宿駅","139.700464","35.689729","shinjyuku"],["新大久保駅","139.700261","35.700875","shinokubo"],["高田馬場駅","139.703715","35.712677","takadanobaba"],["目白駅","139.706228","35.720476","mejiro"],["池袋駅","139.711086","35.730256","ikebukuro"],["大塚駅","139.728584","35.731412","otsuka"],["巣鴨駅","139.739303","35.733445","sugamo"],["駒込駅","139.748053","35.736825","komagome"],["田端駅","139.761229","35.737781","tabata"],["西日暮里駅","139.766857","35.731954","nishinippori"],["日暮里駅","139.771287","35.727908","nippori"],["鶯谷駅","139.778015","35.721484","uguisudani"],["上野駅","139.777043","35.71379","ueno"],["御徒町駅","139.774727","35.707282","okachimachi"],["秋葉原駅","139.773288","35.698619","akihabara"],["神田駅","139.770641","35.691173","kanda"]],GeoloniaMap_stories_MarkerWithPopup=function MarkerWithPopup(){var _useState=Object(react.useState)(-1),_useState2=Object(slicedToArray.a)(_useState,2),count=_useState2[0],setCount=_useState2[1];Object(react.useLayoutEffect)((function(){var timeout;return function tick(){setCount((function(count){return count+1})),timeout=window.setTimeout(tick,5e3)}(),function(){window.clearTimeout(timeout)}}),[]);var _TokyoYamanoteLineSta=Object(slicedToArray.a)(TokyoYamanoteLineStations[Math.max(0,count)%TokyoYamanoteLineStations.length],3),name=_TokyoYamanoteLineSta[0],lng=_TokyoYamanoteLineSta[1],lat=_TokyoYamanoteLineSta[2];return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",lat:lat,lng:lng,openPopup:"on",zoom:"12"},react_default.a.createElement("h3",null,name))},GeoloniaMap_stories_AllControls=function AllControls(){return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",lat:"34.704395",lng:"135.494771",zoom:"14",navigationControl:"on",geolocateControl:"on",fullscreenControl:"on",scaleControl:"on"},"グランフロント")},GeoloniaMap_stories_CustomControls=function CustomControls(){var _useState3=Object(react.useState)([]),_useState4=Object(slicedToArray.a)(_useState3,2),controls=_useState4[0],setControls=_useState4[1],handleAppendControl=Object(react.useCallback)((function(){var control={type:document.getElementById("select-type").value,position:document.getElementById("select-position").value};setControls([].concat(Object(toConsumableArray.a)(controls),[control]))}),[controls]);return react_default.a.createElement("div",{className:"flex"},react_default.a.createElement("form",{className:"sidebar"},react_default.a.createElement("select",{name:"control-type",id:"select-type"},["button","text","label"].map((function(type){return react_default.a.createElement("option",{key:type,value:type},type)}))),react_default.a.createElement("select",{name:"position",id:"select-position"},["top-left","top-right","bottom-right","bottom-left"].map((function(position){return react_default.a.createElement("option",{key:position,value:position},position)}))),react_default.a.createElement("button",{type:"button",onClick:handleAppendControl},"コントロールを追加")),react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{lng:TokyoYamanoteLineStations[0][1],lat:TokyoYamanoteLineStations[0][2],zoom:"16",className:"geolonia-80",marker:"off"},controls.map((function(control,i){return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap.Control,{key:i,position:control.position,containerProps:{className:"maplibregl-ctrl maplibregl-ctrl-group mapboxgl-ctrl mapboxgl-ctrl-group"}},"button"===control.type?react_default.a.createElement("button",null,"".concat(i+1)):"label"===control.type?react_default.a.createElement("span",null,"Hello ".concat(i+1)):"text"===control.type?react_default.a.createElement("input",{type:"text",placeholder:"Hello ".concat(i+1)}):null)}))))},GeoloniaMap_stories_GeoJSONWithSimpleStyle=function GeoJSONWithSimpleStyle(){return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",geojson:"https://gist.githubusercontent.com/miya0001/56c3dc174f5cdf1d9565cbca0fbd3c48/raw/c13330036d28ef547a8a87cb6df3fa12de19ddb6/test.geojson",marker:"off"})},GeoloniaMap_stories_VectorTileWithSimpleStyle=function VectorTileWithSimpleStyle(){return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",simpleVector:"https://tileserver.geolonia.com/embed-simple-vector-sample/tiles.json",marker:"off"})},GeoloniaMap_stories_Enable3D=function Enable3D(){return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",mapStyle:"geolonia/basic",lat:"35.68116",lng:"139.764992",zoom:"16",render3d:"on"})},GeoloniaMap_stories_Disable3D=function Disable3D(){return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",mapStyle:"geolonia/gsi",lat:"35.68116",lng:"139.764992",zoom:"16",render3d:"off"})},GeoloniaMap_stories_CustomJavaScript=function CustomJavaScript(){var onLoad=Object(react.useCallback)((function(map){var animator=void 0;return function doRotate(){map.rotateTo(map.getBearing()+.1),animator=window.requestAnimationFrame(doRotate)}(),function(){void 0!==animator&&window.cancelAnimationFrame(animator)}}),[]);return react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",mapStyle:"geolonia/basic",lat:"35.68116",lng:"139.764992",zoom:"16",render3d:"on",onLoad:onLoad})},GeoloniaMap_stories_ChangeProps=function ChangeProps(){var _useState5=Object(react.useState)("on"),_useState6=Object(slicedToArray.a)(_useState5,2),onoff=_useState6[0],setOnoff=_useState6[1];return react_default.a.createElement("div",null,react_default.a.createElement("p",null,"Currently displaying: ",onoff),react_default.a.createElement("button",{onClick:function onClick(){return setOnoff("on")}},"Set render3d = on"),react_default.a.createElement("button",{onClick:function onClick(){return setOnoff("off")}},"Set render3d = off"),react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",mapStyle:"geolonia/basic",lat:"35.68116",lng:"139.764992",zoom:"16",render3d:onoff}))},GeoloniaMap_stories_WithinComponent=function WithinComponent(){var WrapperComponent=function WrapperComponent(_ref){var idx=_ref.idx;return react_default.a.createElement("div",null,react_default.a.createElement("h3",null,"Hello, map ",idx,"!"),react_default.a.createElement(src_GeoloniaMap_GeoloniaMap,{className:"geolonia",mapStyle:"geolonia/basic",lat:"35.68116",lng:"139.764992",zoom:"16",render3d:"on"}))},_useState7=Object(react.useState)(0),_useState8=Object(slicedToArray.a)(_useState7,2),sel=_useState8[0],setSel=_useState8[1];return react_default.a.createElement("div",null,react_default.a.createElement("p",null,"Currently displaying: ",sel),react_default.a.createElement("button",{onClick:function onClick(){return setSel(0)}},"Switch to 0"),react_default.a.createElement("button",{onClick:function onClick(){return setSel(1)}},"Switch to 1"),react_default.a.createElement("button",{onClick:function onClick(){return setSel(2)}},"Switch to 2"),react_default.a.createElement(WrapperComponent,{idx:sel}))}},"./storybook-init-framework-entry.js":function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__("./node_modules/@storybook/react/dist/esm/client/index.js")},0:function(module,exports,__webpack_require__){__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/polyfills.js"),__webpack_require__("./node_modules/@storybook/core-client/dist/esm/globals/globals.js"),__webpack_require__("./storybook-init-framework-entry.js"),__webpack_require__("./node_modules/@storybook/react/dist/esm/client/preview/config-generated-config-entry.js"),module.exports=__webpack_require__("./generated-stories-entry.js")},1:function(module,exports){}},[[0,2,3]]]);