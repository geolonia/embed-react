name: build

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x']
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ env.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: yarn install

      - run: yarn lint

      - run: yarn build

      - uses: actions/upload-artifact@v3
        if: "!failure()"
        with:
          retention-days: 1
          name: artifacts
          path: |
            dist/

  publish:
    name: 'Publish npm package'
    runs-on: ubuntu-latest
    needs:
      - build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@geolonia'

      - uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: dist

      - name: 'Publish to NPM (latest)'
        if: "!contains(github.ref, '-pre.')"
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 'Publish to NPM (next)'
        if: "contains(github.ref, '-pre.')"
        run: npm publish --access=public --tag=next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
